{"ast":null,"code":"var _jsxFileName = \"/Users/teejay/Documents/PersonalCode/ReactProjects/react-meetup-app/src/pages/NewMeetup.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NewMeetupForm from \"../components/meetups/NewMeetupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewMeetupPage() {\n  _s();\n  {/* useNavigate is a react-router-dom hook stored in history variable used to navigate to desire pages*/}\n  const history = useNavigate();\n  {/* addMeetupHandler takes a prop which is 'onAddMeetup' and sends it to api  */}\n  function addMeetupHandler(props) {\n    {/* fetch is a java feature that connects to api server link and by deafults, 'gets' data*/}\n    {/* after fetching data, you can use .then}\n     {/* #1, to use fetch you first add server link in quotes */}\n    {/* #2, to send data, you specify an object which contains the 'key' called method - either ('GET' or 'POST') */}\n    {/* #3, for the body, you convert data to JSON with JSON.stringify(data) */}\n    {/* #4, you can specify the content type which is apllication json*/}\n    fetch(\"https://react-getting-started-19fd9-default-rtdb.firebaseio.com/meetups.json\", {\n      method: \"POST\",\n      body: JSON.stringify(props),\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      history(\"/\");\n      {/* history(link) aka useNavigate(link) redirects to another page */}\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: addMeetupHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(NewMeetupPage, \"UuBpJaL/77ixlr0CeL0xEoy8mog=\", false, function () {\n  return [useNavigate];\n});\n_c = NewMeetupPage;\nexport default NewMeetupPage;\nvar _c;\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"names":["React","useNavigate","NewMeetupForm","jsxDEV","_jsxDEV","NewMeetupPage","_s","history","addMeetupHandler","props","fetch","method","body","JSON","stringify","header","then","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddMeetup","_c","$RefreshReg$"],"sources":["/Users/teejay/Documents/PersonalCode/ReactProjects/react-meetup-app/src/pages/NewMeetup.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NewMeetupForm from \"../components/meetups/NewMeetupForm\";\n\nfunction NewMeetupPage() {\n  {/* useNavigate is a react-router-dom hook stored in history variable used to navigate to desire pages*/}\n  const history = useNavigate();\n  {/* addMeetupHandler takes a prop which is 'onAddMeetup' and sends it to api  */}\n  function addMeetupHandler(props) {\n    {/* fetch is a java feature that connects to api server link and by deafults, 'gets' data*/}\n    {/* after fetching data, you can use .then}\n    {/* #1, to use fetch you first add server link in quotes */}\n    {/* #2, to send data, you specify an object which contains the 'key' called method - either ('GET' or 'POST') */}\n    {/* #3, for the body, you convert data to JSON with JSON.stringify(data) */}\n    {/* #4, you can specify the content type which is apllication json*/}\n    fetch(\n      \"https://react-getting-started-19fd9-default-rtdb.firebaseio.com/meetups.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(props),\n        header: { \"Content-Type\": \"application/json\" },\n      }\n    ).then(() => {\n      history(\"/\"); {/* history(link) aka useNavigate(link) redirects to another page */}\n    });\n  }\n  \n\n  return (\n    <section>\n      <h1>Add New Meetup</h1>\n      {/* NewMeetupForm has a form which collects data and stores it in an object \n          which is passed through 'onAddMeetup' from NewMeetupForm and points it to addMeetupHandler */}\n      <NewMeetupForm onAddMeetup={addMeetupHandler} />\n    </section>\n  );\n}\n\nexport default NewMeetupPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,CAAC;EACD,MAAMC,OAAO,GAAGN,WAAW,EAAE;EAC7B,CAAC;EACD,SAASO,gBAAgBA,CAACC,KAAK,EAAE;IAC/B,CAAC;IACD,CAAC;AACL,gEADK;IAED,CAAC;IACD,CAAC;IACD,CAAC;IACDC,KAAK,CACH,8EAA8E,EAC9E;MACEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;MAC3BM,MAAM,EAAE;QAAE,cAAc,EAAE;MAAmB;IAC/C,CAAC,CACF,CAACC,IAAI,CAAC,MAAM;MACXT,OAAO,CAAC,GAAG,CAAC;MAAE,CAAC;IACjB,CAAC,CAAC;EACJ;EAGA,oBACEH,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAGvBjB,OAAA,CAACF,aAAa;MAACoB,WAAW,EAAEd;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEd;AAACf,EAAA,CAhCQD,aAAa;EAAA,QAEJJ,WAAW;AAAA;AAAAsB,EAAA,GAFpBlB,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}